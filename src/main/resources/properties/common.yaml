api:
  Name: "mdp-orders-sys-api"
  Version: "1.0.0"
  status: "Running"
  
flowName:
  "mainFlow": "mdp-orders-sys-api-main"
  "postOrdersSubflow": "mdp-orders-post-subflow"
  "patchOrdersSubflow": "mdp-orders-patch-subflow"
  "getOrdersSubflow": "mdp-orders-get-subflow"
  "pingSubflow": "mdp-orders-ping-subflow"
  "healthCheckSubflow": "mdp-orders-healthcheck-subflow"
  "getOrdersByIdSubflow": "mdp-orders-getid-subflow"
  
httpRetry:
  frequency: "2000"
  attempts: "3"
  
step:
  processStart: "Process start"
  processEnd: "Process End"
  flowStart: "Flow Start"
  flowEnd: "Flow End"
  beforeRequest: "Before Request"
  afterRequest: "After Request"
  
errorLogger:
  transactionlevel: "Error"
  status: "Error"
  
db:
  getOrdersQuery: "SELECT order_id, customer_name, product, customer_address, customer_contact, order_type, regionOfSales, orderValue FROM orders"
  getOrdersById: "SELECT order_id, customer_name, product, customer_address, customer_contact, order_type, regionOfSales, orderValue FROM orders where order_id= :id"
  healthcheck: "SELECT order_id FROM orders where orders=:id"
  updateOrderById: "UPDATE orders SET order_id= :orderId, customer_name= :customerName, product= :Product, customer_address= :customerAddress, order_type= :orderType, regionOfSales= :regionOfSales, orderValue= :orderValue WHERE order_id= :id"
  createOrders: "INSERT INTO orders (order_id, customer_name, product, customer_address, customer_contact, order_type, regionOfSales, orderValue) Values(:order_id, :customer_name, :product, :customer_address, :customer_contact, :order_type, :regionOfSales, :orderValue)"
  
  
  
  
  
  